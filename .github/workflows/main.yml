name: isoimagewriter

on:
  push:
    branches:
      - main
      - 'stable-[0-9]+.[0-9]+'
      - 'stable-[0-9]+.[0-9]+.[0-9]+'
  pull_request:
  workflow_dispatch:

concurrency: 
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions: {}

defaults:
  run:
    shell: pwsh

jobs:
# ------------------------------------------------------------------------------------------------------------------------------------------
  build:
    permissions:
      # actions/upload-artifact doesn't need contents: write
      contents: read
    strategy:
        fail-fast: true
        matrix:
            include:
            - target: windows-cl-msvc2022-x86_64
              os: windows-latest
              container:
      
    name: ${{ matrix.target }}

    runs-on: ${{ matrix.os }}

    env:
      CRAFT_TARGET: ${{ matrix.target }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CRAFT_PACKAGE_SYMBOLS: ${{  github.event_name != 'pull_request' }}

    container: ${{ matrix.container }}

    steps:
    - name: Check out full source code for tooling
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check out latest commit
      uses: actions/checkout@v4

    - name: Restore and update cache
      if: github.event_name != 'pull_request'
      uses: actions/cache@v4
      with:
        path: |
          ~/ccache
        key: ${{ runner.os }}-${{ matrix.target }}-${{ github.run_id }} # generate a new key every time to trigger an update
        restore-keys: ${{ runner.os }}-${{ matrix.target }}

    - name: Restore cache
      if: github.event_name == 'pull_request'
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/ccache
        key: ${{ runner.os }}-${{ matrix.target }}


    - name: Clone CraftMaster
      run: |
        git clone --depth=1 https://invent.kde.org/kde/craftmaster.git "${home}/craft/CraftMaster/CraftMaster"

    - name: Craft setup
      run: |
        New-Item -Path ~/cache -ItemType Directory -ErrorAction SilentlyContinue
        & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" --setup

    - name: Craft unshelve
      run: |
        & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c craft
        # ccache
        
    - name: Prepare
      run: |
        New-Item -ItemType Directory "${env:GITHUB_WORKSPACE}/binaries/"
        # settings
        if ("${{ github.ref_type }}" -ne "tag"  ) {
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set "forceAsserts=true" isoimagewriter
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set "buildBeta=true" isoimagewriter
        }
        & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set "srcDir=${env:GITHUB_WORKSPACE}" isoimagewriter
        & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --set "buildNumber=${{ github.run_number }}" isoimagewriter
        # optional deployment dependencies
        & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c dev-utils/nsis
        
    - name: Install dependencies
      run: |
          & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --install-deps isoimagewriter


    - name: Build
      run: |
        & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache isoimagewriter

    - name: Package
      if: matrix.target  != 'macos-clang-arm64'
      run: |
        & "${env:GITHUB_WORKSPACE}/.github/workflows/.craft.ps1" -c --no-cache --package isoimagewriter


    - name: Prepare artifacts
      run: |
        Copy-Item "${home}/craft/binaries/*" "${env:GITHUB_WORKSPACE}/binaries/" -ErrorAction SilentlyContinue
        if ("${{ github.ref_type }}" -eq "tag"  ) {
          Get-ChildItem "${env:GITHUB_WORKSPACE}/binaries/" | ForEach-Object {
            $newName = $_.Name -replace "opencloud-desktop-HEAD-\d*-", "OpenCloud_Desktop-${{ github.ref_name }}-"
            if ($newName -ne $_.Name) {
              Move-Item -Path $_ -Destination (Join-Path $_.Directory $newName) -Force
            }
          }
        }

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}-${{ github.run_number }}
        path: ${{ github.workspace }}/binaries/*
